# This workflow will build and publish OsReleaseNet to Nuget.

name: Publish Package to Nuget

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-and-publish:
      runs-on: ubuntu-latest
  
      permissions:
        id-token: write 
      environment: production
        
      steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-dotnet@d4c94342e560b34958eacfc5d055d21461ed1c5d # v5.0.0
        with:
          dotnet-version: 9.0.x
      - name: Restore dependencies
        run: dotnet restore
        working-directory: src
      - name: Create packages
        run: dotnet build -c Release
        working-directory: src
        
          # Get a short-lived NuGet API key
      - name: NuGet login (OIDC â†’ temp API key)
        uses: NuGet/login@d22cc5f58ff5b88bf9bd452535b4335137e24544 # v1.1.0
        id: login
        with:
            user: ${{ secrets.NUGET_USER }}
              
          # Push the package
      - name: NuGet push
        run: dotnet nuget push src/OsReleaseNet/bin/Release/*.nupkg --api-key ${{steps.login.outputs.NUGET_API_KEY}} --source https://api.nuget.org/v3/index.json
